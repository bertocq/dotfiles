[user]
  name = Bertocq
  email = bertocq@gmail.com
[color]
  ui = true
[color "branch"]
  current = red
  local = green 
  remote = white
[color "diff"]
  old = red strike
[core]
  excludesfile = ~/.gitignore_global
  autocrlf = input
  editor = subl -w -n
[alias]

  # Status
  st = status -s
  lg = log --graph --pretty=format:'%C(yellow)%h%C(reset) -%C(auto)%d %s %C(green)(%cr) %C(bold blue)<%an>'
  
  # Pull
  p = pull --rebase

  # Staging
  s = stash
  ss = show stash
  su = stash --include-untracked
  sa = stash apply
  sd = stash drop
  sp = stash pop

  # Branches
  bs = branch -a
  bd = branch -D
  co = checkout
  cob = checkout -b
  db = "!sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -"
  pb = "!sh -c 'git push --set-upstream origin $1' -"
  pu = ![[ $(git config "branch.$(git symbolic-ref --short HEAD).merge") = '' ]] && git push -u origin $(git symbolic-ref --short HEAD) || git push
  clearb = "! git branch --merged | xargs git branch -d"
  reb = "!git fetch origin && git rebase origin/master"

  # Commits
  cam = commit --amend
  ci = commit
  cp = cherry-pick
  gcm = commit -m

  # Diff
  gd = "! git diff --color | diff-so-fancy"
  gds = diff --staged
  #gds = "! git diff --staged | diff-so-fancy"

  # Rubocop
  ru = "! git status --porcelain | cut -c4- | grep '.rb' | xargs rubocop -a"
  rubo = "! git status --porcelain | cut -c4- | grep '.rb' | xargs rubocop"
  rup = "!sh -c \"git diff --name-only HEAD..$1 | grep '.rb' | xargs rubocop -a\" -"
  rubop = "!sh -c \"git diff --name-only HEAD..$1 | grep '.rb' | xargs rubocop \" -"
  rpo = remote prune origin

  # Submodules
  su = pull --recurse-submodules
  sup = !git submodule update && git submodule foreach git checkout master && git submodule foreach git pull origin master
  
  # Reverting
  revert = reset HEAD~
  reset = reset HEAD^ --mixed
  undo = reset --soft HEAD~1                   # Undo last commit (affects HEAD only)
  unstage = reset HEAD --

  # Github
  pr = pull-request

  it = !git init && git commit -m “root” --allow-empty
[diff]
  compactionHeuristic = true
[push]
  default = tracking
[pull]
  rebase = true
[commit]
  template = ~/.gitmessage
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
[credential]
  helper = osxkeychain
[github]
  user = bertocq
[fetch]
  prune = true
[branch]
  autosetuprebase = always
[merge]
  ff = false
[rerere]
  enabled = true
